<% include ./../layout/header.ejs %>
<style>
 
/* Input fields styling */
form input[type="text"],
form input[type="date"],
form select {
    padding: 8px;
    font-size: 14px;
    border: 1px solid #ccc; /* Subtle border */
    border-radius: 4px; /* Rounded edges */
    outline: none;
    width: 200px; /* Consistent width for inputs */
    transition: border-color 0.3s ease; /* Smooth hover effect */
}

/* Hover and focus effects for inputs */
form input[type="text"]:focus,
form input[type="date"]:focus,
form select:focus {
    border-color: #007BFF; /* Blue border on focus */
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Subtle glow effect */
}

/* Dropdown styling */
form select {
    cursor: pointer; /* Indicates interactivity */
    background-color: #fff; /* White background for contrast */
}

/* Submit button styling */
form button {
    padding: 10px 20px;
    font-size: 14px;
    font-weight: bold;
    color: #fff; /* White text */
    background-color: #007BFF; /* Blue background */
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease; /* Smooth hover effect */
}

/* Submit button hover effect */
form button:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

/* Responsive styling for smaller screens */
@media (max-width: 768px) {
    form {
        flex-direction: column; /* Stack form fields vertically */
        gap: 10px;
    }

    form input[type="text"],
    form input[type="date"],
    form select {
        width: 100%; /* Full-width inputs */
    }
}


 /* Print-specific styles */
@media print {
  /* Show the logo only in print */
  .print-logo {
    display: block !important;
    margin: 0 auto 20px auto;
    max-width: 150px;
  }

  /* Hide actions and other non-print elements */
  .btn, .box-tools, th:last-child, td:last-child {
    display: none !important;
  }

  h1 {
    text-align: center; /* Center the title */
    font-size: 24px;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    font-size: 14px;
  }

  table th, table td {
    border: 1px solid #000;
    padding: 8px;
    text-align: left;
  }

  /* Remove unnecessary margins for better print layout */
  body {
    margin: 0;
  }
}

  /* Modal styles */
  .modal {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      z-index: 1000;
  }
  .modal-content {
      display: flex;
      flex-direction: column;
      gap: 15px;
  }
  .modal-header {
      font-size: 18px;
      font-weight: bold;
  }
  .modal-footer {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
  }
  .overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 999;
  }
</style>

<!-- Content Wrapper -->
<div class="content-wrapper">
  <section class="content-header">
    <h1>Student Control</h1>

    <div style="overflow: auto; padding: 10px;">
      <button style="float: left; text-align: center;" class="btn btn-success" onclick="openNewCashModal()">Add new evaluation</button>
      <button style="text-align: center; margin-left: 20px;;" class="btn btn-success" onclick="openFilterModal()">Filter</button>
      <button style="float: right; text-align: center;" class="btn btn-primary" onclick="window.print()">Print</button>
    </div>   

  </section>

  <section class="content">
    <div class="box">
      <div class="box-header with-border">
        <div class="box-tools pull-right">
          <button type="button" class="btn btn-box-tool" data-widget="collapse">
            <i class="fa fa-minus"></i>
          </button>
        </div>
      </div> 
      <div style="text-align: center; margin-bottom: 20px;">
        <img src="../../dist/img/Mohamed-Yusuf.jpg" alt="Logo Image" style="max-width: 100px; height: auto;">
      </div>
      
      
      <div class="box-body">   
        <table class="table table-striped">
          <thead>
            <tr>
              <th>SQN</th>
              <th>Name</th>
              <th>Phone</th>
              <th>Descriptions</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (stdcontrol.length > 0) { %>
              <% stdcontrol.forEach((std, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td><%= std.name %></td>
                  <td><%= std.phone %></td>   
                  <td><%= std.desc %></td>                   
                  <td>
                    <button class="btn btn-warning" onclick="openEditModal('<%= std.id %>', '<%= std.desc %>')">Edit</button>
                    <button class="btn btn-danger" onclick="openDeleteModal('<%= std.id %>')">Delete</button>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="7" class="text-center" style="font-weight: bold; color: gray;">No records to display</td>
              </tr>
            <% } %>
          </tbody>
        </table>
        
      </div>
    </div>
  </section>
</div>


<!-- Filter Modal -->
<div id="filterModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">Filter order</div>
    <div  style="margin-bottom: 20px;">
      <form method="POST" action="/getAllstdControl_filter" onsubmit="return validateForm()">

        <!-- Ordered Date Fields -->
            <div class="form-group">
            <label for="startDate"></label>
            <input type="date" id="startDate" name="startDate">
          </div>
            <div class="form-group">
            <label for="endDate"></label>
            <input type="date" id="endDate" name="endDate">
          </div>
            <!-- Submit Button -->
            <div class="modal-footer">
            <button type="submit">Filter</button>
            <button type="button" class="btn btn-secondary" onclick="closeModal('filterModal')">Cancel</button>
          </div>

        </form>
    </div>
  </div>
</div> 

<!-- Add new order Modal -->
 <!-- Add new order Modal -->
<div id="addModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">Add Cash Order</div>
    <form id="insertForm">
      <!-- Student Selection Field -->
      <div class="form-group">
        <label for="studentSelect">Student:</label>
        <select id="studentSelect" name="studentId" class="form-control" required>
          <option value="" disabled selected>Select a student</option>
          <% students.forEach(student => { %>
            <option value="<%= student.id %>"><%= student.name %></option>
          <% }); %>
        </select>
      </div> 

      <!-- Description Field -->
      <div class="form-group">
        <label for="description">Descriptions:</label>
        <textarea id="description" name="description" class="form-control" rows="4" required placeholder="Descriptions"></textarea>
      </div>
      
      <!-- Modal Footer -->
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="button" class="btn btn-secondary" onclick="closeModal('addModal')">Cancel</button>
      </div>
    </form>
  </div>
</div>




<!-- Edit Modal -->
<div id="editModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">Edit order</div>
      <form id="editForm">
        <input type="hidden" id="editId"> 
      <!-- Description Field -->
      <div class="form-group">
        <label for="description">Descriptions:</label>
        <textarea id="description11" name="description11" class="form-control" rows="4" required placeholder="Descriptions"></textarea>
      </div>
         
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Update</button>
          <button type="button" class="btn btn-secondary" onclick="closeModal('editModal')">Cancel</button>
        </div>
      </form>
    </div>
  </div>
  
<!-- Delete Modal -->
<div id="deleteModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">Confirm Deletion</div>
    <p>Are you sure you want to delete this order?</p>
    <div class="modal-footer">
      <button id="confirmDelete" class="btn btn-danger">Yes, Delete</button>
      <button type="button" class="btn btn-secondary" onclick="closeModal('deleteModal')">Cancel</button>
    </div>
  </div>
</div>
<!-- Overlay -->
<div class="overlay" id="overlay"></div>
<script>
  // Open modal
  function openModal(modalId) {
      document.getElementById(modalId).style.display = 'block';
      document.getElementById('overlay').style.display = 'block';
  }

     


  // Close modal
  function closeModal(modalId) {
      document.getElementById(modalId).style.display = 'none';
      document.getElementById('overlay').style.display = 'none';
  }

     // Open add modal
function openNewCashModal() {
       openModal('addModal');
} 

   // Open Filter modal
function openFilterModal() {
       openModal('filterModal');
} 

 // Open edit modal
 function openEditModal(id, desc) {
     document.getElementById('editId').value = id;
 document.getElementById('description11').value = desc;
    openModal('editModal');
}
  // Open delete modal
  function openDeleteModal(id) {
      document.getElementById('confirmDelete').onclick = function () {
          deleteorder(id);
      };
      openModal('deleteModal');
  }
 
// Handle form submission for updating status and amount
document.getElementById('editForm').onsubmit = function (e) {
    e.preventDefault();
    const id = document.getElementById('editId').value;
    const description = document.getElementById('description11').value; // Fetches the current text
    fetch('/edit_std_controll', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ description, id }),
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message || 'Student controll updated successfully!');
        location.reload();
    })
    .catch(err => console.error('Error:', err));
};




  // Delete order
  function deleteorder(id) {
      fetch('/delete_std_controll', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id }),
      })
      .then(response => response.json())
      .then(data => {
          alert(data.message || 'order deleted successfully!');
          location.reload();
      })
      .catch(err => console.error(err));
  }



  function validateForm() {
    // Get the values of startDate and endDate
    var startDate = document.getElementById("startDate").value;
    var endDate = document.getElementById("endDate").value;

    // Check if startDate and endDate have values
    if (!startDate || !endDate) {
        alert("Both Start Date and End Date are required.");
        return false; // Prevent form submission
    }

    // Additional logic can go here, for example, checking that startDate is before endDate.
    if (new Date(startDate) > new Date(endDate)) {
        alert("Start Date cannot be later than End Date.");
        return false; // Prevent form submission
    }

    // If everything is fine, submit the form
    return true;
}


function validateFormAddStudent() {
    // Get the values of startDate and endDate
     
    var description = document.getElementById("description").value;
    var editAmount1 = document.getElementById("editAmount1").value;

    // Check if startDate and endDate have values
    if (!editAmount1) {
        alert("Amount is required.");
        return false; // Prevent form submission
    } 
    if (!description) {
        alert("Description is required.");
        return false; // Prevent form submission
    } 

    // If everything is fine, submit the form
    return true;
}

// Handle form submission
document.getElementById('insertForm').onsubmit = function (e) {
    e.preventDefault(); 
    const desc = document.getElementById('description').value;
    const stdid = document.getElementById('studentSelect').value;
    fetch('/studentcontroll_register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ stdid,desc}),
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message || 'Cash student controll inserted successfully!');
        location.reload();
    })
    .catch(err => console.error(err));
};




</script>
<% include ./../layout/footer.ejs %>
